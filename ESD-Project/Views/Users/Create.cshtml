@model ESD_Project.Models.User

@{
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    ViewBag.Title = "Create Account";
}
<div class="text-center mt-4">
    <h2>Create Account</h2>
    
</div>

<hr />

@using (Html.BeginForm("Create", "Users", FormMethod.Post, new { enctype = "multipart/form-data", @class = "mb-5" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger alertDeplay" })
    if (ViewBag.Success != null)
    {
        <div class="alert alert-info alert-dismissable alertDeplay">
            <a class="panel-close close" data-dismiss="alert">×</a>
            <i class="fa fa-coffee"></i>
            @ViewBag.Success
        </div>
    }
    <div class="row">
        <div class="col-sm-12 col-md-6">
            <div class="form-group">
                <label class="control-label">Avatar: </label>
                <input type="file" name="uploadFile" value="" class="form-control" accept="image/*">
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="col-sm-12 col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountStatus, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.AccountStatus, new { @class = "form-check-input" })
                    @Html.ValidationMessageFor(model => model.AccountStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control", @id = "selectRole", @onchange = "getValue()" })
                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group" id="formFalculty" style="display:none">
                @Html.LabelFor(model => model.MajorId, "MajorId", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("MajorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MajorId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-around">
        <a href="@Url.Action("Index", "Users")" class="btn btn-dark">Back</a>
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
