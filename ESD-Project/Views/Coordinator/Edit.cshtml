@model ESD_Project.Models.Topic

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/CoordinatorLayout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Create", "Coordinator", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Topic</h4>
    @DateTime.Now
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TopicId)
    <div class="d-flex flex-row justify-content-center align-content-center">
        @if (Model.FileDetails != null)
        {
            foreach (var file in Model.FileDetails)
            {
                <img class="img-thumbnail" width="200" height="200" src="@Url.Action("Show", "Admin", new { fileId = @file.FileDetailsId })" />
            }
        }
        <input type="file" name="uploadFile" value="" class="border p-1 uploadeBroswer border-dark w-25" accept="image/*">
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClosureDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClosureDate, "", new { htmlAttributes = new { @class = "form-control", Type = "datetime-local" } })
            @Html.ValidationMessageFor(model => model.ClosureDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ManageTopic")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
