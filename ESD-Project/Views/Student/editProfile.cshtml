@model ESD_Project.Models.User

@{
    ViewBag.Title = "editProfile";
    Layout = "~/Views/Shared/StudentLayout.cshtml";
}

<div class="text-center mt-4">
    <h2>Edit Account</h2>

</div>

<hr />


@using (Html.BeginForm("editProfile", "Student", FormMethod.Post, new { enctype = "multipart/form-data", @class = "mb-5" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger alertDeplay" })
    <input name="UserId" type="hidden" value="@Model.UserId" />
    @Html.HiddenFor(model => model.UserId)
    <div class="row">
        <div class="col-sm-12 col-md-4">
            <div class="form-group">
                <div class="text-center" style="max-height:300px;">
                    @if (Model.FileDetails != null)
                    {
                        foreach (var file in Model.FileDetails)
                        {
                            <img class="img-thumbnail w-100 h-100" src="@Url.Action("Show", "Admin", new { fileId = @file.FileDetailsId })" />
                        }
                    }
                    <input type="file" name="uploadFile" value="" class="form-control" accept="image/*">
                </div>
            </div>
        </div>

        <div class="col-sm-12 col-md-8">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })

                <input name="Email" value="@Model.Email" class="form-control" />
            </div>

            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label " })

                <input type="hidden" name="Username" value="@Model.Username" class="form-control" />
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                <input name="Password" value="@Model.Password" class="form-control" />
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label " })

                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>

            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.AccountStatus, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.AccountStatus, new { @class = "form-check-input" })
                    @Html.ValidationMessageFor(model => model.AccountStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.GroupId, htmlAttributes: new { @class = "control-label" })

                @Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control", @id = "selectRole", @onchange = "getValue()" })
                @Html.ValidationMessageFor(model => model.GroupId, "", new { @class = "text-danger" })

            </div>

            <div class="form-group" id="formFalculty" style="display:none">
                @Html.LabelFor(model => model.MajorId, "MajorId", htmlAttributes: new { @class = "control-label" })

                @Html.DropDownList("MajorId", null, htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.MajorId, "", new { @class = "text-danger" })

            </div>
        </div>
    </div>
    <hr>
    <div class="d-flex justify-content-around">
        <a href="@Url.Action("Profile", "Student", new {id = Model.UserId })" class="btn btn-dark">Back</a>
        <input type="submit" value="Update" class="btn btn-primary" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

