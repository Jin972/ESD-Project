@model ESD_Project.Models.Topic

@{
    Layout = "~/Views/Shared/AdminLayout.cshtml";
    ViewBag.Title = "Edit Topic";
}

<div class="text-center mt-4">
    <h2>Edit Topic</h2>

</div>

<hr />

@using (Html.BeginForm("Edit", "Topics", FormMethod.Post, new { enctype = "multipart/form-data", @class = "mb-5" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TopicId)
        <div class="col-sm-12 col-md-4">
            <div class="form-group">
                <div class="text-center" style="max-height:300px;">
                    @if (Model.FileDetails != null)
                    {
                        foreach (var file in Model.FileDetails)
                        {
                            <img class="img-thumbnail w-100 h-100" src="@Url.Action("Show", "Admin", new { fileId = @file.FileDetailsId })" />
                        }
                    }
                    <input type="file" name="uploadFile" value="" class="form-control" accept="image/*">
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-8">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ClosureDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ClosureDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClosureDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifyDate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ModifyDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifyDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifyBy, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ModifyBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifyBy, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Status)
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MajorId, "MajorId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("MajorId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MajorId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <hr>
    <div class="d-flex justify-content-around">
        <a href="@Url.Action("Index", "Topics")" class="btn btn-dark">Back</a>
        <input type="submit" value="Update" class="btn btn-primary" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
